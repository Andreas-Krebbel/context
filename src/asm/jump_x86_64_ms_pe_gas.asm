/*
            Copyright Oliver Kowalke 2009.
            Copyright Thomas Sailer 2013.
   Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
            http://www.boost.org/LICENSE_1_0.txt)
*/

/****************************************************************************************
 *                                                                                      *
 *  ----------------------------------------------------------------------------------  *
 *  |    0    |    1    |    2    |    3    |    4     |    5    |    6    |    7    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x0   |   0x4   |   0x8   |   0xc   |   0x10   |   0x14  |   0x18  |   0x1c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        R12        |         R13       |         R14        |        R15        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    8    |    9    |   10    |   11    |    12    |    13   |    14   |    15   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x20  |   0x24  |   0x28  |  0x2c   |   0x30   |   0x34  |   0x38  |   0x3c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        RDI        |        RSI        |         RBX        |        RBP        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    16   |    17   |    18   |    19   |                                        |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x40  |   0x44  |   0x48  |   0x4c  |                                        |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        RSP        |        RIP        |                                        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    20   |    21   |    22   |    23   |    24    |    25   |                   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x50  |   0x54  |   0x58  |   0x5c  |   0x60   |   0x64  |                   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        sp         |       size        |        limit       |                   |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    26   |   27    |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x68  |   0x6c  |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  |      fbr_strg     |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    28   |   29    |    30   |    31   |    32    |    33   |   34    |   35    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x70  |   0x74  |   0x78  |   0x7c  |   0x80   |   0x84  |  0x88   |  0x8c   |  *
 *  ----------------------------------------------------------------------------------  *
 *  | fc_mxcsr|fc_x87_cw|      fc_xmm       |      SEE registers (XMM6-XMM15)        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |   36    |    37   |    38   |    39   |    40    |    41   |   42    |   43    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |  0x90   |   0x94  |   0x98  |   0x9c  |   0xa0   |   0xa4  |  0xa8   |  0xac   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |                          SEE registers (XMM6-XMM15)                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    44    |   45    |    46   |    47  |    48    |    49   |   50    |   51    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0xb0   |  0xb4   |  0xb8   |  0xbc  |   0xc0   |   0xc4  |  0xc8   |  0xcc   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |                          SEE registers (XMM6-XMM15)                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    52    |   53    |    54   |   55   |    56    |    57   |   58    |   59    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0xd0   |  0xd4   |   0xd8  |  0xdc  |   0xe0   |  0xe4   |  0xe8   |  0xec   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |                          SEE registers (XMM6-XMM15)                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    60   |    61   |    62    |    63  |    64    |    65   |   66    |   67    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |  0xf0   |  0xf4   |   0xf8   |  0xfc  |   0x100  |  0x104  |  0x108  |  0x10c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  |                          SEE registers (XMM6-XMM15)                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    68   |    69   |    70    |    71  |    72    |    73   |   74    |   75    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |  0x110  |  0x114  |   0x118  |  0x11c |   0x120  |  0x124  |  0x128  |  0x12c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  |                          SEE registers (XMM6-XMM15)                            |  *
 *  ----------------------------------------------------------------------------------  *
 *                                                                                      *
 * *************************************************************************************/

.file	"jump_x86_64_ms_pe_gas.S"
.text
.p2align 4,,15
.globl	jump_fcontext
.def	jump_fcontext;	.scl	2;	.type	32;	.endef
.seh_proc	jump_fcontext
jump_fcontext:
.seh_endprologue
    movq    %r12,       (%rcx)      /* save R12 */
    movq    %r13,       0x08(%rcx)  /* save R13 */
    movq    %r14,       0x10(%rcx)  /* save R14 */
    movq    %r15,       0x18(%rcx)  /* save R15 */
    movq    %rdi,       0x20(%rcx)  /* save RDI */
    movq    %rsi,       0x28(%rcx)  /* save RSI */
    movq    %rbx,       0x30(%rcx)  /* save RBX */
    movq    %rbp,       0x38(%rcx)  /* save RBP */

    movq    %gs:(0x30), %r10        /* load NT_TIB */
    movq    0x08(%r10), %rax        /* load current stack base */
    movq    %rax,       0x50(%rcx)  /* save current stack base */
    movq    0x10(%r10), %rax        /* load current stack limit */
    movq    %rax,       0x60(%rcx)  /* save current stack limit */
    movq    0x18(%r10), %rax        /* load fiber local storage */
    movq    %rax,       0x68(%rcx)  /* save fiber local storage */

    testq   %r9,        %r9
    je      1f

    stmxcsr 0x70(%rcx)              /* save MMX control and status word */
    fnstcw  0x74(%rcx)              /* save x87 control word */
    /* save XMM storage */
    /* save start address of SSE register block in R10 */
    leaq    0x90(%rcx), %r10
    /* shift address in R10 to lower 16 byte boundary */
    /* == pointer to SEE register block */
    andq    $-16,       %r10

    movaps  %xmm6,      (%r10)
    movaps  %xmm7,      0x10(%r10)
    movaps  %xmm8,      0x20(%r10)
    movaps  %xmm9,      0x30(%r10)
    movaps  %xmm10,     0x40(%r10)
    movaps  %xmm11,     0x50(%r10)
    movaps  %xmm12,     0x60(%r10)
    movaps  %xmm13,     0x70(%r10)
    movaps  %xmm14,     0x80(%r10)
    movaps  %xmm15,     0x90(%r10)

    ldmxcsr 0x70(%rdx)              /* restore MMX control and status word */
    fldcw   0x74(%rdx)              /* restore x87 control word */
    /* restore XMM storage */
	/* save start address of SSE register block in R10 */
    leaq    0x90(%rdx), %r10
    /* shift address in R10 to lower 16 byte boundary */
    /* == pointer to SEE register block */
    andq    $-16,       %r10

    movaps  (%r10),     %xmm6
    movaps  0x10(%r10), %xmm7
    movaps  0x20(%r10), %xmm8
    movaps  0x30(%r10), %xmm9
    movaps  0x40(%r10), %xmm10
    movaps  0x50(%r10), %xmm11
    movaps  0x60(%r10), %xmm12
    movaps  0x70(%r10), %xmm13
    movaps  0x80(%r10), %xmm14
    movaps  0x90(%r10), %xmm15

1:
    leaq    0x08(%rsp), %rax        /* exclude the return address */
    movq    %rax,       0x40(%rcx)  /* save as stack pointer */
    movq    (%rsp),     %rax        /* load return address */
    movq    %rax,       0x48(%rcx)  /* save return address */

    movq    (%rdx),     %r12        /* restore R12 */
    movq    0x08(%rdx), %r13        /* restore R13 */
    movq    0x10(%rdx), %r14        /* restore R14 */
    movq    0x18(%rdx), %r15        /* restore R15 */
    movq    0x20(%rdx), %rdi        /* restore RDI */
    movq    0x28(%rdx), %rsi        /* restore RSI */
    movq    0x30(%rdx), %rbx        /* restore RBX */
    movq    0x38(%rdx), %rbp        /* restore RBP */

    movq    %gs:(0x30), %r10        /* load NT_TIB */
    movq    0x50(%rdx), %rax        /* load stack base */
    movq    %rax,       0x08(%r10)  /* restore stack base */
    movq    0x60(%rdx), %rax        /* load stack limit */
    movq    %rax,       0x10(%r10)  /* restore stack limit */
    movq    0x68(%rdx), %rax        /* load fiber local storage */
    movq    %rax,       0x18(%r10)  /* restore fiber local storage */

    movq    0x40(%rdx), %rsp        /* restore RSP */
    movq    0x48(%rdx), %r10        /* fetch the address to returned to */

    movq    %r8,        %rax        /* use third arg as return value after jump */
    movq    %r8,        %rcx        /* use third arg as first arg in context function */

    jmp     *%r10                   /* indirect jump to caller */
.seh_endproc
